// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.6
// source: protoimp/alunos.proto

package alunos_grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AlunoManegementClient is the client API for AlunoManegement service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AlunoManegementClient interface {
	CreateAluno(ctx context.Context, in *NewAluno, opts ...grpc.CallOption) (*Aluno, error)
	GetAlunos(ctx context.Context, in *GetAlunosParams, opts ...grpc.CallOption) (*AlunosList, error)
	GetAluno(ctx context.Context, in *GetAlunosParams, opts ...grpc.CallOption) (*Aluno, error)
	UpdateAluno(ctx context.Context, in *NewAluno, opts ...grpc.CallOption) (*Aluno, error)
	DeleteAluno(ctx context.Context, in *GetAlunosParams, opts ...grpc.CallOption) (*Aluno, error)
	GetCoin(ctx context.Context, in *GetCoinRequest, opts ...grpc.CallOption) (*GetCoinResponse, error)
	SearchAlunos(ctx context.Context, in *SearchAlunoRequest, opts ...grpc.CallOption) (AlunoManegement_SearchAlunosClient, error)
}

type alunoManegementClient struct {
	cc grpc.ClientConnInterface
}

func NewAlunoManegementClient(cc grpc.ClientConnInterface) AlunoManegementClient {
	return &alunoManegementClient{cc}
}

func (c *alunoManegementClient) CreateAluno(ctx context.Context, in *NewAluno, opts ...grpc.CallOption) (*Aluno, error) {
	out := new(Aluno)
	err := c.cc.Invoke(ctx, "/protoimp.AlunoManegement/CreateAluno", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alunoManegementClient) GetAlunos(ctx context.Context, in *GetAlunosParams, opts ...grpc.CallOption) (*AlunosList, error) {
	out := new(AlunosList)
	err := c.cc.Invoke(ctx, "/protoimp.AlunoManegement/GetAlunos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alunoManegementClient) GetAluno(ctx context.Context, in *GetAlunosParams, opts ...grpc.CallOption) (*Aluno, error) {
	out := new(Aluno)
	err := c.cc.Invoke(ctx, "/protoimp.AlunoManegement/GetAluno", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alunoManegementClient) UpdateAluno(ctx context.Context, in *NewAluno, opts ...grpc.CallOption) (*Aluno, error) {
	out := new(Aluno)
	err := c.cc.Invoke(ctx, "/protoimp.AlunoManegement/UpdateAluno", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alunoManegementClient) DeleteAluno(ctx context.Context, in *GetAlunosParams, opts ...grpc.CallOption) (*Aluno, error) {
	out := new(Aluno)
	err := c.cc.Invoke(ctx, "/protoimp.AlunoManegement/DeleteAluno", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alunoManegementClient) GetCoin(ctx context.Context, in *GetCoinRequest, opts ...grpc.CallOption) (*GetCoinResponse, error) {
	out := new(GetCoinResponse)
	err := c.cc.Invoke(ctx, "/protoimp.AlunoManegement/GetCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alunoManegementClient) SearchAlunos(ctx context.Context, in *SearchAlunoRequest, opts ...grpc.CallOption) (AlunoManegement_SearchAlunosClient, error) {
	stream, err := c.cc.NewStream(ctx, &AlunoManegement_ServiceDesc.Streams[0], "/protoimp.AlunoManegement/SearchAlunos", opts...)
	if err != nil {
		return nil, err
	}
	x := &alunoManegementSearchAlunosClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AlunoManegement_SearchAlunosClient interface {
	Recv() (*SearchAlunoResponse, error)
	grpc.ClientStream
}

type alunoManegementSearchAlunosClient struct {
	grpc.ClientStream
}

func (x *alunoManegementSearchAlunosClient) Recv() (*SearchAlunoResponse, error) {
	m := new(SearchAlunoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AlunoManegementServer is the server API for AlunoManegement service.
// All implementations must embed UnimplementedAlunoManegementServer
// for forward compatibility
type AlunoManegementServer interface {
	CreateAluno(context.Context, *NewAluno) (*Aluno, error)
	GetAlunos(context.Context, *GetAlunosParams) (*AlunosList, error)
	GetAluno(context.Context, *GetAlunosParams) (*Aluno, error)
	UpdateAluno(context.Context, *NewAluno) (*Aluno, error)
	DeleteAluno(context.Context, *GetAlunosParams) (*Aluno, error)
	GetCoin(context.Context, *GetCoinRequest) (*GetCoinResponse, error)
	SearchAlunos(*SearchAlunoRequest, AlunoManegement_SearchAlunosServer) error
	mustEmbedUnimplementedAlunoManegementServer()
}

// UnimplementedAlunoManegementServer must be embedded to have forward compatible implementations.
type UnimplementedAlunoManegementServer struct {
}

func (UnimplementedAlunoManegementServer) CreateAluno(context.Context, *NewAluno) (*Aluno, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAluno not implemented")
}
func (UnimplementedAlunoManegementServer) GetAlunos(context.Context, *GetAlunosParams) (*AlunosList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAlunos not implemented")
}
func (UnimplementedAlunoManegementServer) GetAluno(context.Context, *GetAlunosParams) (*Aluno, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAluno not implemented")
}
func (UnimplementedAlunoManegementServer) UpdateAluno(context.Context, *NewAluno) (*Aluno, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAluno not implemented")
}
func (UnimplementedAlunoManegementServer) DeleteAluno(context.Context, *GetAlunosParams) (*Aluno, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAluno not implemented")
}
func (UnimplementedAlunoManegementServer) GetCoin(context.Context, *GetCoinRequest) (*GetCoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCoin not implemented")
}
func (UnimplementedAlunoManegementServer) SearchAlunos(*SearchAlunoRequest, AlunoManegement_SearchAlunosServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchAlunos not implemented")
}
func (UnimplementedAlunoManegementServer) mustEmbedUnimplementedAlunoManegementServer() {}

// UnsafeAlunoManegementServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AlunoManegementServer will
// result in compilation errors.
type UnsafeAlunoManegementServer interface {
	mustEmbedUnimplementedAlunoManegementServer()
}

func RegisterAlunoManegementServer(s grpc.ServiceRegistrar, srv AlunoManegementServer) {
	s.RegisterService(&AlunoManegement_ServiceDesc, srv)
}

func _AlunoManegement_CreateAluno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAluno)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlunoManegementServer).CreateAluno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoimp.AlunoManegement/CreateAluno",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlunoManegementServer).CreateAluno(ctx, req.(*NewAluno))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlunoManegement_GetAlunos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlunosParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlunoManegementServer).GetAlunos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoimp.AlunoManegement/GetAlunos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlunoManegementServer).GetAlunos(ctx, req.(*GetAlunosParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlunoManegement_GetAluno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlunosParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlunoManegementServer).GetAluno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoimp.AlunoManegement/GetAluno",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlunoManegementServer).GetAluno(ctx, req.(*GetAlunosParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlunoManegement_UpdateAluno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAluno)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlunoManegementServer).UpdateAluno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoimp.AlunoManegement/UpdateAluno",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlunoManegementServer).UpdateAluno(ctx, req.(*NewAluno))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlunoManegement_DeleteAluno_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlunosParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlunoManegementServer).DeleteAluno(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoimp.AlunoManegement/DeleteAluno",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlunoManegementServer).DeleteAluno(ctx, req.(*GetAlunosParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlunoManegement_GetCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlunoManegementServer).GetCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoimp.AlunoManegement/GetCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlunoManegementServer).GetCoin(ctx, req.(*GetCoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlunoManegement_SearchAlunos_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchAlunoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AlunoManegementServer).SearchAlunos(m, &alunoManegementSearchAlunosServer{stream})
}

type AlunoManegement_SearchAlunosServer interface {
	Send(*SearchAlunoResponse) error
	grpc.ServerStream
}

type alunoManegementSearchAlunosServer struct {
	grpc.ServerStream
}

func (x *alunoManegementSearchAlunosServer) Send(m *SearchAlunoResponse) error {
	return x.ServerStream.SendMsg(m)
}

// AlunoManegement_ServiceDesc is the grpc.ServiceDesc for AlunoManegement service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AlunoManegement_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protoimp.AlunoManegement",
	HandlerType: (*AlunoManegementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAluno",
			Handler:    _AlunoManegement_CreateAluno_Handler,
		},
		{
			MethodName: "GetAlunos",
			Handler:    _AlunoManegement_GetAlunos_Handler,
		},
		{
			MethodName: "GetAluno",
			Handler:    _AlunoManegement_GetAluno_Handler,
		},
		{
			MethodName: "UpdateAluno",
			Handler:    _AlunoManegement_UpdateAluno_Handler,
		},
		{
			MethodName: "DeleteAluno",
			Handler:    _AlunoManegement_DeleteAluno_Handler,
		},
		{
			MethodName: "GetCoin",
			Handler:    _AlunoManegement_GetCoin_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchAlunos",
			Handler:       _AlunoManegement_SearchAlunos_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protoimp/alunos.proto",
}
